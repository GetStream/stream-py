"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys
import video.sfu.models.models_pb2
import video.sfu.signal_rpc.signal_pb2

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class SfuEvent(google.protobuf.message.Message):
    """SFUEvent is a message that is sent from the SFU to the client."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUBSCRIBER_OFFER_FIELD_NUMBER: builtins.int
    PUBLISHER_ANSWER_FIELD_NUMBER: builtins.int
    CONNECTION_QUALITY_CHANGED_FIELD_NUMBER: builtins.int
    AUDIO_LEVEL_CHANGED_FIELD_NUMBER: builtins.int
    ICE_TRICKLE_FIELD_NUMBER: builtins.int
    CHANGE_PUBLISH_QUALITY_FIELD_NUMBER: builtins.int
    PARTICIPANT_JOINED_FIELD_NUMBER: builtins.int
    PARTICIPANT_LEFT_FIELD_NUMBER: builtins.int
    DOMINANT_SPEAKER_CHANGED_FIELD_NUMBER: builtins.int
    JOIN_RESPONSE_FIELD_NUMBER: builtins.int
    HEALTH_CHECK_RESPONSE_FIELD_NUMBER: builtins.int
    TRACK_PUBLISHED_FIELD_NUMBER: builtins.int
    TRACK_UNPUBLISHED_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    CALL_GRANTS_UPDATED_FIELD_NUMBER: builtins.int
    GO_AWAY_FIELD_NUMBER: builtins.int
    ICE_RESTART_FIELD_NUMBER: builtins.int
    PINS_UPDATED_FIELD_NUMBER: builtins.int
    CALL_ENDED_FIELD_NUMBER: builtins.int
    PARTICIPANT_UPDATED_FIELD_NUMBER: builtins.int
    PARTICIPANT_MIGRATION_COMPLETE_FIELD_NUMBER: builtins.int
    CHANGE_PUBLISH_OPTIONS_FIELD_NUMBER: builtins.int
    INBOUND_STATE_NOTIFICATION_FIELD_NUMBER: builtins.int
    @property
    def subscriber_offer(self) -> global___SubscriberOffer:
        """SubscriberOffer sends the SDP offer for establishing the
        subscriber PeerConnection.
        """
    @property
    def publisher_answer(self) -> global___PublisherAnswer:
        """PublisherAnswer sends the SDP answer to the offer sent by
        the client for establishing the Publisher PeerConnection.
        """
    @property
    def connection_quality_changed(self) -> global___ConnectionQualityChanged:
        """ConnectionQualityChanged is sent to inform the connection
        quality of the participants in the call. It does not have
        to contain the full list of call participants in it.
        """
    @property
    def audio_level_changed(self) -> global___AudioLevelChanged:
        """AudioLevelChanged is sent for change in audio levels of
        the participants.
        """
    @property
    def ice_trickle(self) -> video.sfu.models.models_pb2.ICETrickle:
        """ICETrickle contains the ICE candidate required to establish
        the ICE transport: part of establishing the PeerConnection
        and also for ICE restarts.
        """
    @property
    def change_publish_quality(self) -> global___ChangePublishQuality:
        """ChangePublishQuality advises the publisher to switch on/off
        various qualities of their video stream based on the subscription.
        This is done to save the bandwidth and the CPU of the publisher.
        """
    @property
    def participant_joined(self) -> global___ParticipantJoined:
        """ParticipantJoined notifies the client that a new participant
        has joined the call. This is not sent for anonymous users.
        """
    @property
    def participant_left(self) -> global___ParticipantLeft:
        """ParticipantLeft notifies the client that a call participant
        has left the call. This is not sent for anonymous users.
        """
    @property
    def dominant_speaker_changed(self) -> global___DominantSpeakerChanged:
        """DominantSpeakerChanged notifies the client about the current
        dominant speaker. This is required for certain use cases like
        the spotlight view.
        """
    @property
    def join_response(self) -> global___JoinResponse:
        """JoinResponse acknowledges a participant successfully joining
        the call. This is sent in response to the JoinRequest.
        """
    @property
    def health_check_response(self) -> global___HealthCheckResponse:
        """HealthCheckResponse is sent in response to the HealthCheckRequest.
        It contains the participant count in the call.
        """
    @property
    def track_published(self) -> global___TrackPublished:
        """TrackPublished is sent when a new track (like audio, video, screenshare)
        is published by a participant in the call. It is also sent on mute/unmute.
        """
    @property
    def track_unpublished(self) -> global___TrackUnpublished:
        """TrackUnpublished is sent when a track (like audio, video, screenshare)
        is no longer published. It is sent on muting a track or when the participant
        is leaving the call.
        """
    @property
    def error(self) -> global___Error:
        """Error is used to communicate any error related to the participant. The
        error code and the message explain what went wrong. Whether the participant
        can retry is also indicated.
        """
    @property
    def call_grants_updated(self) -> global___CallGrantsUpdated:
        """CallGrantsUpdated tells what tracks a participant is allowed to publish."""
    @property
    def go_away(self) -> global___GoAway:
        """GoAway tells the client to migrate away from the SFU it is connected to.
        The reason field indicates why this message was sent.
        """
    @property
    def ice_restart(self) -> global___ICERestart:
        """ICERestart tells the client to perform ICE restart."""
    @property
    def pins_updated(self) -> global___PinsChanged:
        """PinsChanged is sent the list of pins in the call changes. This event contains the entire list of pins."""
    @property
    def call_ended(self) -> global___CallEnded:
        """CallEnded is sent by the SFU to the client to signal that the call has ended.
        The reason may specify why the call has ended.
        """
    @property
    def participant_updated(self) -> global___ParticipantUpdated:
        """ParticipantUpdated is sent when user data is updated"""
    @property
    def participant_migration_complete(self) -> global___ParticipantMigrationComplete:
        """ParticipantMigrationComplete is sent when the participant migration is complete"""
    @property
    def change_publish_options(self) -> global___ChangePublishOptions:
        """ChangePublishOptions is sent to signal the change in publish options such as a new codec or simulcast layers"""
    @property
    def inbound_state_notification(self) -> global___InboundStateNotification:
        """InboundStateNotification"""
    def __init__(
        self,
        *,
        subscriber_offer: global___SubscriberOffer | None = ...,
        publisher_answer: global___PublisherAnswer | None = ...,
        connection_quality_changed: global___ConnectionQualityChanged | None = ...,
        audio_level_changed: global___AudioLevelChanged | None = ...,
        ice_trickle: video.sfu.models.models_pb2.ICETrickle | None = ...,
        change_publish_quality: global___ChangePublishQuality | None = ...,
        participant_joined: global___ParticipantJoined | None = ...,
        participant_left: global___ParticipantLeft | None = ...,
        dominant_speaker_changed: global___DominantSpeakerChanged | None = ...,
        join_response: global___JoinResponse | None = ...,
        health_check_response: global___HealthCheckResponse | None = ...,
        track_published: global___TrackPublished | None = ...,
        track_unpublished: global___TrackUnpublished | None = ...,
        error: global___Error | None = ...,
        call_grants_updated: global___CallGrantsUpdated | None = ...,
        go_away: global___GoAway | None = ...,
        ice_restart: global___ICERestart | None = ...,
        pins_updated: global___PinsChanged | None = ...,
        call_ended: global___CallEnded | None = ...,
        participant_updated: global___ParticipantUpdated | None = ...,
        participant_migration_complete: global___ParticipantMigrationComplete
        | None = ...,
        change_publish_options: global___ChangePublishOptions | None = ...,
        inbound_state_notification: global___InboundStateNotification | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "audio_level_changed",
            b"audio_level_changed",
            "call_ended",
            b"call_ended",
            "call_grants_updated",
            b"call_grants_updated",
            "change_publish_options",
            b"change_publish_options",
            "change_publish_quality",
            b"change_publish_quality",
            "connection_quality_changed",
            b"connection_quality_changed",
            "dominant_speaker_changed",
            b"dominant_speaker_changed",
            "error",
            b"error",
            "event_payload",
            b"event_payload",
            "go_away",
            b"go_away",
            "health_check_response",
            b"health_check_response",
            "ice_restart",
            b"ice_restart",
            "ice_trickle",
            b"ice_trickle",
            "inbound_state_notification",
            b"inbound_state_notification",
            "join_response",
            b"join_response",
            "participant_joined",
            b"participant_joined",
            "participant_left",
            b"participant_left",
            "participant_migration_complete",
            b"participant_migration_complete",
            "participant_updated",
            b"participant_updated",
            "pins_updated",
            b"pins_updated",
            "publisher_answer",
            b"publisher_answer",
            "subscriber_offer",
            b"subscriber_offer",
            "track_published",
            b"track_published",
            "track_unpublished",
            b"track_unpublished",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "audio_level_changed",
            b"audio_level_changed",
            "call_ended",
            b"call_ended",
            "call_grants_updated",
            b"call_grants_updated",
            "change_publish_options",
            b"change_publish_options",
            "change_publish_quality",
            b"change_publish_quality",
            "connection_quality_changed",
            b"connection_quality_changed",
            "dominant_speaker_changed",
            b"dominant_speaker_changed",
            "error",
            b"error",
            "event_payload",
            b"event_payload",
            "go_away",
            b"go_away",
            "health_check_response",
            b"health_check_response",
            "ice_restart",
            b"ice_restart",
            "ice_trickle",
            b"ice_trickle",
            "inbound_state_notification",
            b"inbound_state_notification",
            "join_response",
            b"join_response",
            "participant_joined",
            b"participant_joined",
            "participant_left",
            b"participant_left",
            "participant_migration_complete",
            b"participant_migration_complete",
            "participant_updated",
            b"participant_updated",
            "pins_updated",
            b"pins_updated",
            "publisher_answer",
            b"publisher_answer",
            "subscriber_offer",
            b"subscriber_offer",
            "track_published",
            b"track_published",
            "track_unpublished",
            b"track_unpublished",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["event_payload", b"event_payload"]
    ) -> (
        typing_extensions.Literal[
            "subscriber_offer",
            "publisher_answer",
            "connection_quality_changed",
            "audio_level_changed",
            "ice_trickle",
            "change_publish_quality",
            "participant_joined",
            "participant_left",
            "dominant_speaker_changed",
            "join_response",
            "health_check_response",
            "track_published",
            "track_unpublished",
            "error",
            "call_grants_updated",
            "go_away",
            "ice_restart",
            "pins_updated",
            "call_ended",
            "participant_updated",
            "participant_migration_complete",
            "change_publish_options",
            "inbound_state_notification",
        ]
        | None
    ): ...

global___SfuEvent = SfuEvent

@typing_extensions.final
class ChangePublishOptions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PUBLISH_OPTIONS_FIELD_NUMBER: builtins.int
    REASON_FIELD_NUMBER: builtins.int
    @property
    def publish_options(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        video.sfu.models.models_pb2.PublishOption
    ]: ...
    reason: builtins.str
    def __init__(
        self,
        *,
        publish_options: collections.abc.Iterable[
            video.sfu.models.models_pb2.PublishOption
        ]
        | None = ...,
        reason: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "publish_options", b"publish_options", "reason", b"reason"
        ],
    ) -> None: ...

global___ChangePublishOptions = ChangePublishOptions

@typing_extensions.final
class ChangePublishOptionsComplete(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___ChangePublishOptionsComplete = ChangePublishOptionsComplete

@typing_extensions.final
class ParticipantMigrationComplete(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___ParticipantMigrationComplete = ParticipantMigrationComplete

@typing_extensions.final
class PinsChanged(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PINS_FIELD_NUMBER: builtins.int
    @property
    def pins(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        video.sfu.models.models_pb2.Pin
    ]:
        """the list of pins in the call.
        Pins are ordered in descending order (most important first).
        """
    def __init__(
        self,
        *,
        pins: collections.abc.Iterable[video.sfu.models.models_pb2.Pin] | None = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["pins", b"pins"]
    ) -> None: ...

global___PinsChanged = PinsChanged

@typing_extensions.final
class Error(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ERROR_FIELD_NUMBER: builtins.int
    RECONNECT_STRATEGY_FIELD_NUMBER: builtins.int
    @property
    def error(self) -> video.sfu.models.models_pb2.Error: ...
    reconnect_strategy: video.sfu.models.models_pb2.WebsocketReconnectStrategy.ValueType
    """returns the reconnect strategy to be used by the client"""
    def __init__(
        self,
        *,
        error: video.sfu.models.models_pb2.Error | None = ...,
        reconnect_strategy: video.sfu.models.models_pb2.WebsocketReconnectStrategy.ValueType = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["error", b"error"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "error", b"error", "reconnect_strategy", b"reconnect_strategy"
        ],
    ) -> None: ...

global___Error = Error

@typing_extensions.final
class ICETrickle(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PEER_TYPE_FIELD_NUMBER: builtins.int
    ICE_CANDIDATE_FIELD_NUMBER: builtins.int
    peer_type: video.sfu.models.models_pb2.PeerType.ValueType
    ice_candidate: builtins.str
    def __init__(
        self,
        *,
        peer_type: video.sfu.models.models_pb2.PeerType.ValueType = ...,
        ice_candidate: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "ice_candidate", b"ice_candidate", "peer_type", b"peer_type"
        ],
    ) -> None: ...

global___ICETrickle = ICETrickle

@typing_extensions.final
class ICERestart(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PEER_TYPE_FIELD_NUMBER: builtins.int
    peer_type: video.sfu.models.models_pb2.PeerType.ValueType
    def __init__(
        self,
        *,
        peer_type: video.sfu.models.models_pb2.PeerType.ValueType = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["peer_type", b"peer_type"]
    ) -> None: ...

global___ICERestart = ICERestart

@typing_extensions.final
class SfuRequest(google.protobuf.message.Message):
    """SfuRequest is a message that is sent from the client to the SFU."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    JOIN_REQUEST_FIELD_NUMBER: builtins.int
    HEALTH_CHECK_REQUEST_FIELD_NUMBER: builtins.int
    LEAVE_CALL_REQUEST_FIELD_NUMBER: builtins.int
    @property
    def join_request(self) -> global___JoinRequest: ...
    @property
    def health_check_request(self) -> global___HealthCheckRequest: ...
    @property
    def leave_call_request(self) -> global___LeaveCallRequest: ...
    def __init__(
        self,
        *,
        join_request: global___JoinRequest | None = ...,
        health_check_request: global___HealthCheckRequest | None = ...,
        leave_call_request: global___LeaveCallRequest | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "health_check_request",
            b"health_check_request",
            "join_request",
            b"join_request",
            "leave_call_request",
            b"leave_call_request",
            "request_payload",
            b"request_payload",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "health_check_request",
            b"health_check_request",
            "join_request",
            b"join_request",
            "leave_call_request",
            b"leave_call_request",
            "request_payload",
            b"request_payload",
        ],
    ) -> None: ...
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal["request_payload", b"request_payload"],
    ) -> (
        typing_extensions.Literal[
            "join_request", "health_check_request", "leave_call_request"
        ]
        | None
    ): ...

global___SfuRequest = SfuRequest

@typing_extensions.final
class LeaveCallRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SESSION_ID_FIELD_NUMBER: builtins.int
    REASON_FIELD_NUMBER: builtins.int
    session_id: builtins.str
    reason: builtins.str
    def __init__(
        self,
        *,
        session_id: builtins.str = ...,
        reason: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "reason", b"reason", "session_id", b"session_id"
        ],
    ) -> None: ...

global___LeaveCallRequest = LeaveCallRequest

@typing_extensions.final
class HealthCheckRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___HealthCheckRequest = HealthCheckRequest

@typing_extensions.final
class HealthCheckResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PARTICIPANT_COUNT_FIELD_NUMBER: builtins.int
    @property
    def participant_count(self) -> video.sfu.models.models_pb2.ParticipantCount: ...
    def __init__(
        self,
        *,
        participant_count: video.sfu.models.models_pb2.ParticipantCount | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "participant_count", b"participant_count"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "participant_count", b"participant_count"
        ],
    ) -> None: ...

global___HealthCheckResponse = HealthCheckResponse

@typing_extensions.final
class TrackPublished(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_ID_FIELD_NUMBER: builtins.int
    SESSION_ID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    PARTICIPANT_FIELD_NUMBER: builtins.int
    user_id: builtins.str
    session_id: builtins.str
    type: video.sfu.models.models_pb2.TrackType.ValueType
    @property
    def participant(self) -> video.sfu.models.models_pb2.Participant:
        """Participant information here is included as an optimisation
        for large calls where broadcasting on every participant join
        is expensive. You should **NOT** assume that this will always
        be available though you can use it to update the participant
        list when it is there.
        """
    def __init__(
        self,
        *,
        user_id: builtins.str = ...,
        session_id: builtins.str = ...,
        type: video.sfu.models.models_pb2.TrackType.ValueType = ...,
        participant: video.sfu.models.models_pb2.Participant | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["participant", b"participant"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "participant",
            b"participant",
            "session_id",
            b"session_id",
            "type",
            b"type",
            "user_id",
            b"user_id",
        ],
    ) -> None: ...

global___TrackPublished = TrackPublished

@typing_extensions.final
class TrackUnpublished(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_ID_FIELD_NUMBER: builtins.int
    SESSION_ID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    CAUSE_FIELD_NUMBER: builtins.int
    PARTICIPANT_FIELD_NUMBER: builtins.int
    user_id: builtins.str
    session_id: builtins.str
    type: video.sfu.models.models_pb2.TrackType.ValueType
    cause: video.sfu.models.models_pb2.TrackUnpublishReason.ValueType
    @property
    def participant(self) -> video.sfu.models.models_pb2.Participant:
        """Participant information here is included as an optimisation
        for large calls where broadcasting on every participant join
        is expensive. You should **NOT** assume that this will always
        be available though you can use it to update the participant
        list when it is there.
        """
    def __init__(
        self,
        *,
        user_id: builtins.str = ...,
        session_id: builtins.str = ...,
        type: video.sfu.models.models_pb2.TrackType.ValueType = ...,
        cause: video.sfu.models.models_pb2.TrackUnpublishReason.ValueType = ...,
        participant: video.sfu.models.models_pb2.Participant | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["participant", b"participant"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "cause",
            b"cause",
            "participant",
            b"participant",
            "session_id",
            b"session_id",
            "type",
            b"type",
            "user_id",
            b"user_id",
        ],
    ) -> None: ...

global___TrackUnpublished = TrackUnpublished

@typing_extensions.final
class JoinRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TOKEN_FIELD_NUMBER: builtins.int
    SESSION_ID_FIELD_NUMBER: builtins.int
    SUBSCRIBER_SDP_FIELD_NUMBER: builtins.int
    PUBLISHER_SDP_FIELD_NUMBER: builtins.int
    CLIENT_DETAILS_FIELD_NUMBER: builtins.int
    MIGRATION_FIELD_NUMBER: builtins.int
    FAST_RECONNECT_FIELD_NUMBER: builtins.int
    RECONNECT_DETAILS_FIELD_NUMBER: builtins.int
    PREFERRED_PUBLISH_OPTIONS_FIELD_NUMBER: builtins.int
    PREFERRED_SUBSCRIBE_OPTIONS_FIELD_NUMBER: builtins.int
    CAPABILITIES_FIELD_NUMBER: builtins.int
    token: builtins.str
    session_id: builtins.str
    subscriber_sdp: builtins.str
    """dumb SDP that allow us to extract subscriber's decode codecs"""
    publisher_sdp: builtins.str
    @property
    def client_details(self) -> video.sfu.models.models_pb2.ClientDetails: ...
    @property
    def migration(self) -> global___Migration:
        """Deprecated: use ReconnectDetails instead"""
    fast_reconnect: builtins.bool
    """Fast reconnect flag explicitly indicates that if the participant session
    and the associated state is still present in the SFU, the client is ready
    to restore the PeerConnection with an ICE restart. If the SFU replies with
    "reconnected: true" in its JoinResponse, then it is safe to perform an ICE
    restart or else the existing PeerConnections must be cleaned up.

    For the SFU, fast_reconnect:false indicates that even if it has the state
    cached, the client state is not in sync and hence it must be cleaned up before
    proceeding further.
    """
    @property
    def reconnect_details(self) -> global___ReconnectDetails: ...
    @property
    def preferred_publish_options(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        video.sfu.models.models_pb2.PublishOption
    ]: ...
    @property
    def preferred_subscribe_options(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        video.sfu.models.models_pb2.SubscribeOption
    ]: ...
    @property
    def capabilities(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[
        video.sfu.models.models_pb2.ClientCapability.ValueType
    ]: ...
    def __init__(
        self,
        *,
        token: builtins.str = ...,
        session_id: builtins.str = ...,
        subscriber_sdp: builtins.str = ...,
        publisher_sdp: builtins.str = ...,
        client_details: video.sfu.models.models_pb2.ClientDetails | None = ...,
        migration: global___Migration | None = ...,
        fast_reconnect: builtins.bool = ...,
        reconnect_details: global___ReconnectDetails | None = ...,
        preferred_publish_options: collections.abc.Iterable[
            video.sfu.models.models_pb2.PublishOption
        ]
        | None = ...,
        preferred_subscribe_options: collections.abc.Iterable[
            video.sfu.models.models_pb2.SubscribeOption
        ]
        | None = ...,
        capabilities: collections.abc.Iterable[
            video.sfu.models.models_pb2.ClientCapability.ValueType
        ]
        | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "client_details",
            b"client_details",
            "migration",
            b"migration",
            "reconnect_details",
            b"reconnect_details",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "capabilities",
            b"capabilities",
            "client_details",
            b"client_details",
            "fast_reconnect",
            b"fast_reconnect",
            "migration",
            b"migration",
            "preferred_publish_options",
            b"preferred_publish_options",
            "preferred_subscribe_options",
            b"preferred_subscribe_options",
            "publisher_sdp",
            b"publisher_sdp",
            "reconnect_details",
            b"reconnect_details",
            "session_id",
            b"session_id",
            "subscriber_sdp",
            b"subscriber_sdp",
            "token",
            b"token",
        ],
    ) -> None: ...

global___JoinRequest = JoinRequest

@typing_extensions.final
class ReconnectDetails(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STRATEGY_FIELD_NUMBER: builtins.int
    ANNOUNCED_TRACKS_FIELD_NUMBER: builtins.int
    SUBSCRIPTIONS_FIELD_NUMBER: builtins.int
    RECONNECT_ATTEMPT_FIELD_NUMBER: builtins.int
    FROM_SFU_ID_FIELD_NUMBER: builtins.int
    PREVIOUS_SESSION_ID_FIELD_NUMBER: builtins.int
    REASON_FIELD_NUMBER: builtins.int
    strategy: video.sfu.models.models_pb2.WebsocketReconnectStrategy.ValueType
    @property
    def announced_tracks(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        video.sfu.models.models_pb2.TrackInfo
    ]: ...
    @property
    def subscriptions(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        video.sfu.signal_rpc.signal_pb2.TrackSubscriptionDetails
    ]: ...
    reconnect_attempt: builtins.int
    from_sfu_id: builtins.str
    previous_session_id: builtins.str
    """only set in case of rejoin"""
    reason: builtins.str
    """the reconnect reason"""
    def __init__(
        self,
        *,
        strategy: video.sfu.models.models_pb2.WebsocketReconnectStrategy.ValueType = ...,
        announced_tracks: collections.abc.Iterable[
            video.sfu.models.models_pb2.TrackInfo
        ]
        | None = ...,
        subscriptions: collections.abc.Iterable[
            video.sfu.signal_rpc.signal_pb2.TrackSubscriptionDetails
        ]
        | None = ...,
        reconnect_attempt: builtins.int = ...,
        from_sfu_id: builtins.str = ...,
        previous_session_id: builtins.str = ...,
        reason: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "announced_tracks",
            b"announced_tracks",
            "from_sfu_id",
            b"from_sfu_id",
            "previous_session_id",
            b"previous_session_id",
            "reason",
            b"reason",
            "reconnect_attempt",
            b"reconnect_attempt",
            "strategy",
            b"strategy",
            "subscriptions",
            b"subscriptions",
        ],
    ) -> None: ...

global___ReconnectDetails = ReconnectDetails

@typing_extensions.final
class Migration(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FROM_SFU_ID_FIELD_NUMBER: builtins.int
    ANNOUNCED_TRACKS_FIELD_NUMBER: builtins.int
    SUBSCRIPTIONS_FIELD_NUMBER: builtins.int
    from_sfu_id: builtins.str
    @property
    def announced_tracks(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        video.sfu.models.models_pb2.TrackInfo
    ]: ...
    @property
    def subscriptions(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        video.sfu.signal_rpc.signal_pb2.TrackSubscriptionDetails
    ]: ...
    def __init__(
        self,
        *,
        from_sfu_id: builtins.str = ...,
        announced_tracks: collections.abc.Iterable[
            video.sfu.models.models_pb2.TrackInfo
        ]
        | None = ...,
        subscriptions: collections.abc.Iterable[
            video.sfu.signal_rpc.signal_pb2.TrackSubscriptionDetails
        ]
        | None = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "announced_tracks",
            b"announced_tracks",
            "from_sfu_id",
            b"from_sfu_id",
            "subscriptions",
            b"subscriptions",
        ],
    ) -> None: ...

global___Migration = Migration

@typing_extensions.final
class JoinResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CALL_STATE_FIELD_NUMBER: builtins.int
    RECONNECTED_FIELD_NUMBER: builtins.int
    FAST_RECONNECT_DEADLINE_SECONDS_FIELD_NUMBER: builtins.int
    PUBLISH_OPTIONS_FIELD_NUMBER: builtins.int
    @property
    def call_state(self) -> video.sfu.models.models_pb2.CallState: ...
    reconnected: builtins.bool
    fast_reconnect_deadline_seconds: builtins.int
    @property
    def publish_options(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        video.sfu.models.models_pb2.PublishOption
    ]: ...
    def __init__(
        self,
        *,
        call_state: video.sfu.models.models_pb2.CallState | None = ...,
        reconnected: builtins.bool = ...,
        fast_reconnect_deadline_seconds: builtins.int = ...,
        publish_options: collections.abc.Iterable[
            video.sfu.models.models_pb2.PublishOption
        ]
        | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["call_state", b"call_state"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "call_state",
            b"call_state",
            "fast_reconnect_deadline_seconds",
            b"fast_reconnect_deadline_seconds",
            "publish_options",
            b"publish_options",
            "reconnected",
            b"reconnected",
        ],
    ) -> None: ...

global___JoinResponse = JoinResponse

@typing_extensions.final
class ParticipantJoined(google.protobuf.message.Message):
    """ParticipantJoined is fired when a user joins a call"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CALL_CID_FIELD_NUMBER: builtins.int
    PARTICIPANT_FIELD_NUMBER: builtins.int
    call_cid: builtins.str
    @property
    def participant(self) -> video.sfu.models.models_pb2.Participant: ...
    def __init__(
        self,
        *,
        call_cid: builtins.str = ...,
        participant: video.sfu.models.models_pb2.Participant | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["participant", b"participant"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "call_cid", b"call_cid", "participant", b"participant"
        ],
    ) -> None: ...

global___ParticipantJoined = ParticipantJoined

@typing_extensions.final
class ParticipantLeft(google.protobuf.message.Message):
    """ParticipantJoined is fired when a user leaves a call"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CALL_CID_FIELD_NUMBER: builtins.int
    PARTICIPANT_FIELD_NUMBER: builtins.int
    call_cid: builtins.str
    @property
    def participant(self) -> video.sfu.models.models_pb2.Participant: ...
    def __init__(
        self,
        *,
        call_cid: builtins.str = ...,
        participant: video.sfu.models.models_pb2.Participant | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["participant", b"participant"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "call_cid", b"call_cid", "participant", b"participant"
        ],
    ) -> None: ...

global___ParticipantLeft = ParticipantLeft

@typing_extensions.final
class ParticipantUpdated(google.protobuf.message.Message):
    """ParticipantUpdated is fired when user data is updated"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CALL_CID_FIELD_NUMBER: builtins.int
    PARTICIPANT_FIELD_NUMBER: builtins.int
    call_cid: builtins.str
    @property
    def participant(self) -> video.sfu.models.models_pb2.Participant: ...
    def __init__(
        self,
        *,
        call_cid: builtins.str = ...,
        participant: video.sfu.models.models_pb2.Participant | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["participant", b"participant"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "call_cid", b"call_cid", "participant", b"participant"
        ],
    ) -> None: ...

global___ParticipantUpdated = ParticipantUpdated

@typing_extensions.final
class SubscriberOffer(google.protobuf.message.Message):
    """SubscriberOffer is sent when the SFU adds tracks to a subscription"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ICE_RESTART_FIELD_NUMBER: builtins.int
    SDP_FIELD_NUMBER: builtins.int
    ice_restart: builtins.bool
    sdp: builtins.str
    def __init__(
        self,
        *,
        ice_restart: builtins.bool = ...,
        sdp: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "ice_restart", b"ice_restart", "sdp", b"sdp"
        ],
    ) -> None: ...

global___SubscriberOffer = SubscriberOffer

@typing_extensions.final
class PublisherAnswer(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SDP_FIELD_NUMBER: builtins.int
    sdp: builtins.str
    def __init__(
        self,
        *,
        sdp: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["sdp", b"sdp"]
    ) -> None: ...

global___PublisherAnswer = PublisherAnswer

@typing_extensions.final
class ConnectionQualityChanged(google.protobuf.message.Message):
    """ConnectionQuality is sent to inform about connection quality changes
    eg. thierry's connection is not good -> render a red icon Zoom style
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONNECTION_QUALITY_UPDATES_FIELD_NUMBER: builtins.int
    @property
    def connection_quality_updates(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___ConnectionQualityInfo
    ]: ...
    def __init__(
        self,
        *,
        connection_quality_updates: collections.abc.Iterable[
            global___ConnectionQualityInfo
        ]
        | None = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "connection_quality_updates", b"connection_quality_updates"
        ],
    ) -> None: ...

global___ConnectionQualityChanged = ConnectionQualityChanged

@typing_extensions.final
class ConnectionQualityInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_ID_FIELD_NUMBER: builtins.int
    SESSION_ID_FIELD_NUMBER: builtins.int
    CONNECTION_QUALITY_FIELD_NUMBER: builtins.int
    user_id: builtins.str
    session_id: builtins.str
    connection_quality: video.sfu.models.models_pb2.ConnectionQuality.ValueType
    def __init__(
        self,
        *,
        user_id: builtins.str = ...,
        session_id: builtins.str = ...,
        connection_quality: video.sfu.models.models_pb2.ConnectionQuality.ValueType = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "connection_quality",
            b"connection_quality",
            "session_id",
            b"session_id",
            "user_id",
            b"user_id",
        ],
    ) -> None: ...

global___ConnectionQualityInfo = ConnectionQualityInfo

@typing_extensions.final
class DominantSpeakerChanged(google.protobuf.message.Message):
    """DominantSpeakerChanged is sent by the SFU to notify when there is a new dominant speaker in the call"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_ID_FIELD_NUMBER: builtins.int
    SESSION_ID_FIELD_NUMBER: builtins.int
    user_id: builtins.str
    session_id: builtins.str
    def __init__(
        self,
        *,
        user_id: builtins.str = ...,
        session_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "session_id", b"session_id", "user_id", b"user_id"
        ],
    ) -> None: ...

global___DominantSpeakerChanged = DominantSpeakerChanged

@typing_extensions.final
class AudioLevel(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_ID_FIELD_NUMBER: builtins.int
    SESSION_ID_FIELD_NUMBER: builtins.int
    LEVEL_FIELD_NUMBER: builtins.int
    IS_SPEAKING_FIELD_NUMBER: builtins.int
    user_id: builtins.str
    session_id: builtins.str
    level: builtins.float
    """0.0 means complete silence, 1.0 loudest"""
    is_speaking: builtins.bool
    def __init__(
        self,
        *,
        user_id: builtins.str = ...,
        session_id: builtins.str = ...,
        level: builtins.float = ...,
        is_speaking: builtins.bool = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "is_speaking",
            b"is_speaking",
            "level",
            b"level",
            "session_id",
            b"session_id",
            "user_id",
            b"user_id",
        ],
    ) -> None: ...

global___AudioLevel = AudioLevel

@typing_extensions.final
class AudioLevelChanged(google.protobuf.message.Message):
    """AudioLevelChanged is sent by the SFU to notify about audio levels by user"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AUDIO_LEVELS_FIELD_NUMBER: builtins.int
    @property
    def audio_levels(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___AudioLevel
    ]: ...
    def __init__(
        self,
        *,
        audio_levels: collections.abc.Iterable[global___AudioLevel] | None = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["audio_levels", b"audio_levels"]
    ) -> None: ...

global___AudioLevelChanged = AudioLevelChanged

@typing_extensions.final
class AudioSender(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CODEC_FIELD_NUMBER: builtins.int
    TRACK_TYPE_FIELD_NUMBER: builtins.int
    PUBLISH_OPTION_ID_FIELD_NUMBER: builtins.int
    @property
    def codec(self) -> video.sfu.models.models_pb2.Codec: ...
    track_type: video.sfu.models.models_pb2.TrackType.ValueType
    publish_option_id: builtins.int
    def __init__(
        self,
        *,
        codec: video.sfu.models.models_pb2.Codec | None = ...,
        track_type: video.sfu.models.models_pb2.TrackType.ValueType = ...,
        publish_option_id: builtins.int = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["codec", b"codec"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "codec",
            b"codec",
            "publish_option_id",
            b"publish_option_id",
            "track_type",
            b"track_type",
        ],
    ) -> None: ...

global___AudioSender = AudioSender

@typing_extensions.final
class VideoLayerSetting(google.protobuf.message.Message):
    """VideoLayerSetting is used to specify various parameters of a particular encoding in simulcast.
    The parameters are specified here - https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpEncodingParameters
    SDKs use these parameters sent from the server to dynamically adjust these parameters to save CPU, bandwidth
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    ACTIVE_FIELD_NUMBER: builtins.int
    MAX_BITRATE_FIELD_NUMBER: builtins.int
    SCALE_RESOLUTION_DOWN_BY_FIELD_NUMBER: builtins.int
    CODEC_FIELD_NUMBER: builtins.int
    MAX_FRAMERATE_FIELD_NUMBER: builtins.int
    SCALABILITY_MODE_FIELD_NUMBER: builtins.int
    name: builtins.str
    active: builtins.bool
    max_bitrate: builtins.int
    scale_resolution_down_by: builtins.float
    @property
    def codec(self) -> video.sfu.models.models_pb2.Codec: ...
    max_framerate: builtins.int
    scalability_mode: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        active: builtins.bool = ...,
        max_bitrate: builtins.int = ...,
        scale_resolution_down_by: builtins.float = ...,
        codec: video.sfu.models.models_pb2.Codec | None = ...,
        max_framerate: builtins.int = ...,
        scalability_mode: builtins.str = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["codec", b"codec"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "active",
            b"active",
            "codec",
            b"codec",
            "max_bitrate",
            b"max_bitrate",
            "max_framerate",
            b"max_framerate",
            "name",
            b"name",
            "scalability_mode",
            b"scalability_mode",
            "scale_resolution_down_by",
            b"scale_resolution_down_by",
        ],
    ) -> None: ...

global___VideoLayerSetting = VideoLayerSetting

@typing_extensions.final
class VideoSender(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CODEC_FIELD_NUMBER: builtins.int
    LAYERS_FIELD_NUMBER: builtins.int
    TRACK_TYPE_FIELD_NUMBER: builtins.int
    PUBLISH_OPTION_ID_FIELD_NUMBER: builtins.int
    @property
    def codec(self) -> video.sfu.models.models_pb2.Codec: ...
    @property
    def layers(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___VideoLayerSetting
    ]: ...
    track_type: video.sfu.models.models_pb2.TrackType.ValueType
    publish_option_id: builtins.int
    def __init__(
        self,
        *,
        codec: video.sfu.models.models_pb2.Codec | None = ...,
        layers: collections.abc.Iterable[global___VideoLayerSetting] | None = ...,
        track_type: video.sfu.models.models_pb2.TrackType.ValueType = ...,
        publish_option_id: builtins.int = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["codec", b"codec"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "codec",
            b"codec",
            "layers",
            b"layers",
            "publish_option_id",
            b"publish_option_id",
            "track_type",
            b"track_type",
        ],
    ) -> None: ...

global___VideoSender = VideoSender

@typing_extensions.final
class ChangePublishQuality(google.protobuf.message.Message):
    """sent to users when they need to change the quality of their video"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AUDIO_SENDERS_FIELD_NUMBER: builtins.int
    VIDEO_SENDERS_FIELD_NUMBER: builtins.int
    @property
    def audio_senders(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___AudioSender
    ]: ...
    @property
    def video_senders(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___VideoSender
    ]: ...
    def __init__(
        self,
        *,
        audio_senders: collections.abc.Iterable[global___AudioSender] | None = ...,
        video_senders: collections.abc.Iterable[global___VideoSender] | None = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "audio_senders", b"audio_senders", "video_senders", b"video_senders"
        ],
    ) -> None: ...

global___ChangePublishQuality = ChangePublishQuality

@typing_extensions.final
class CallGrantsUpdated(google.protobuf.message.Message):
    """CallGrants is sent to users when there is a change in the call permissions
    to publish audio, video or share the screen for a user or a role. This is
    idempotent and can be sent at any time. Only the current_grants in the latest
    message should be considered. In other words, this is not dependent on any
    other message (including previous call_grants_updated message)

    When this message is received, the client (say, React component) should mute
    the tracks which are not allowed anymore. For example, if the message has
    grants {audio:true, video:false} while the user is publishing video, then the
    client component should mute the video track and gray out the video button.
    This way, the user will not be able to publish video until the permissions
    are granted again. Also, muting the track on the client side will prevent
    the SFU from receiving the video track and will save bandwidth.

    In simple words, this is exactly the same as muting a track on the client.
    Here, instead of the user instructing the client, SFU would be doing it.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CURRENT_GRANTS_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    @property
    def current_grants(self) -> video.sfu.models.models_pb2.CallGrants: ...
    message: builtins.str
    def __init__(
        self,
        *,
        current_grants: video.sfu.models.models_pb2.CallGrants | None = ...,
        message: builtins.str = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["current_grants", b"current_grants"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "current_grants", b"current_grants", "message", b"message"
        ],
    ) -> None: ...

global___CallGrantsUpdated = CallGrantsUpdated

@typing_extensions.final
class GoAway(google.protobuf.message.Message):
    """Go away is sent by the SFU to the client to signal to migrate away from the SFU.
    The evict reason may specify why the user is being evicted.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REASON_FIELD_NUMBER: builtins.int
    reason: video.sfu.models.models_pb2.GoAwayReason.ValueType
    def __init__(
        self,
        *,
        reason: video.sfu.models.models_pb2.GoAwayReason.ValueType = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["reason", b"reason"]
    ) -> None: ...

global___GoAway = GoAway

@typing_extensions.final
class CallEnded(google.protobuf.message.Message):
    """CallEnded is sent by the SFU to the client to signal that the call has ended.
    The reason may specify why the call has ended.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REASON_FIELD_NUMBER: builtins.int
    reason: video.sfu.models.models_pb2.CallEndedReason.ValueType
    def __init__(
        self,
        *,
        reason: video.sfu.models.models_pb2.CallEndedReason.ValueType = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["reason", b"reason"]
    ) -> None: ...

global___CallEnded = CallEnded

@typing_extensions.final
class InboundStateNotification(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INBOUND_VIDEO_STATES_FIELD_NUMBER: builtins.int
    @property
    def inbound_video_states(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___InboundVideoState
    ]: ...
    def __init__(
        self,
        *,
        inbound_video_states: collections.abc.Iterable[global___InboundVideoState]
        | None = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "inbound_video_states", b"inbound_video_states"
        ],
    ) -> None: ...

global___InboundStateNotification = InboundStateNotification

@typing_extensions.final
class InboundVideoState(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_ID_FIELD_NUMBER: builtins.int
    SESSION_ID_FIELD_NUMBER: builtins.int
    TRACK_TYPE_FIELD_NUMBER: builtins.int
    PAUSED_FIELD_NUMBER: builtins.int
    user_id: builtins.str
    session_id: builtins.str
    track_type: video.sfu.models.models_pb2.TrackType.ValueType
    paused: builtins.bool
    def __init__(
        self,
        *,
        user_id: builtins.str = ...,
        session_id: builtins.str = ...,
        track_type: video.sfu.models.models_pb2.TrackType.ValueType = ...,
        paused: builtins.bool = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "paused",
            b"paused",
            "session_id",
            b"session_id",
            "track_type",
            b"track_type",
            "user_id",
            b"user_id",
        ],
    ) -> None: ...

global___InboundVideoState = InboundVideoState
