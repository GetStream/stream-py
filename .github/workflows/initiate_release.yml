name: Create release PR

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The new version number following semantic versioning convention. Example: 1.40.1"
        required: true

jobs:
  init_release:
    name: ðŸš€ Create release PR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # gives the changelog generator access to all previous commits
      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: "3.12"
      - name: Update version.py and push release branch
        env:
          VERSION: ${{ github.event.inputs.version }}
        run: |
          # Update pyproject.toml with sed since uv doesn't have a version command
          sed -i "s/^version = \".*\"/version = \"$VERSION\"/" pyproject.toml
          # Update version.py directly
          sed -i "s/^VERSION = \".*\"/VERSION = \"$VERSION\"/" getstream/version.py
          # Configure git and push release branch
          git config --global user.name 'github-actions'
          git config --global user.email 'release@getstream.io'
          git checkout -q -b "release-$VERSION"
          git commit -am "chore(release): $VERSION"
          git push -q -u origin "release-$VERSION"
      - name: Open pull request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            -t "Release ${{ github.event.inputs.version }}" \
            -l "ignore-for-release" \
            -b "# :rocket: ${{ github.event.inputs.version }}
            Make sure to use squash & merge when merging!
            Once this is merged, another job will kick off automatically and publish the package."
